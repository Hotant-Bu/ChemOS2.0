# Generated by sila2.code_generator; sila2.__version__: 0.10.1
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), so this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from typing import Iterable, Optional

    from sensor_types import Humidity_Responses, HumidityTemperature_Responses, Temperature_Responses
    from sila2.client import ClientMetadataInstance, ClientObservableCommandInstance


class SensorClient:
    """

    A Sila_server for a temperatur/humidity sensor

    """

    def Temperature(
        self, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> ClientObservableCommandInstance[Temperature_Responses]:
        """
        get a temperature measurment
        """
        ...

    def Humidity(
        self, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> ClientObservableCommandInstance[Humidity_Responses]:
        """
        get a humidity measurment
        """
        ...

    def HumidityTemperature(
        self, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> ClientObservableCommandInstance[HumidityTemperature_Responses]:
        """
        get a humidity and temperature measurement
        """
        ...
